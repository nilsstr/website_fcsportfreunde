name: Initial deployment of resources
# Initial deployment of resources
# This workflow is to deploy the necessary resources such as ECR, S3 and DynamoDB on first run 
# It is triggered by a manual dispatch event.

on:
 workflow_dispatch:

# ECR repository name
env: 
  ECR_REPOSITORY: aws23dockernode

jobs:

  # Build TF-environment and deploy necessary resources such as ECR, S3 and DynamoDB on first run 
  build_resources:

    name: Build Environment
    runs-on: ubuntu-latest
    continue-on-error: true

    steps:

      # Check out code from the repository
      - name: Check out code
        uses: actions/checkout@v3
      
      # Setup Terraform 
      - name: Setup Terraform                                                                      
        uses: hashicorp/setup-terraform@v1
      
      # Verify Terraform version
      - name: Verify Terraform version
        run: terraform --version
      
      # Terraform initialization
      - name: Terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd tf/resources/
          terraform init -input=false
      
      # Terraform apply
      - name: Terraform apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: | 
          cd tf/resources/
          terraform apply -auto-approve

    
  # Build network-settings on first run 
  build_network:

    # Job name
    name: Deploy network settings
    
    # This job needs build_resources job to be completed first
    needs: build_resources
    runs-on: ubuntu-latest
    steps:

    # Check out code from the repository
    - name: Check out code
      uses: actions/checkout@v3
    
    # Setup Terraform
    - name: Setup Terraform                                                                      
      uses: hashicorp/setup-terraform@v1
    
    # Verify Terraform version
    - name: Verify Terraform version
      run: terraform --version
    
    # Terraform initialization
    - name: Terraform init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        cd tf/
        terraform init -input=false
    
    # Terraform apply
    - name: Terraform apply
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: | 
        cd tf/
        terraform apply -auto-approve